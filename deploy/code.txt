# 2. MySQL 서버 설치
sudo apt install mysql-server -y

# 3. MySQL 서비스 시작
sudo systemctl start mysql

# 4. 부팅 시 자동 실행 설정
sudo systemctl enable mysql

# 5. MySQL 서비스 상태 확인
systemctl status mysql

CREATE DATABASE testdb;
SHOW DATABASES;

-- 사용자 생성
CREATE USER 'testuser'@'localhost' IDENTIFIED BY 'password123';
SELECT user, host FROM mysql.user WHERE user='testuser';

-- 권한 부여
GRANT ALL PRIVILEGES ON testdb.* TO 'testuser'@'localhost'; 
*.* 
SHOW GRANTS FOR 'testuser'@'localhost';

-- 권한 적용
FLUSH PRIVILEGES;

-- 테스트
EXIT;

DB_HOST=db
DB_USER=
DB_PASSWORD=
DB_NAME=

OPENAI_API_KEY=


# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

 sudo systemctl status docker

 sudo systemctl start docker

sudo apt-get install docker-compose

sudo usermod -aG docker $USER
newgrp docker

docker-compose version
docker-compose up --build

sudo apt install nginx -y
sudo systemctl start ngnix
sudo systemctl stop nginx
sudo systemctl disable nginx

sudo lsof -i :80


server {
    listen 80;
    server_name localhost;

    # Streamlit UI
    location / {
        proxy_pass http://uiserver:8501;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        ##Streamlit은 WebSocket 연결을 해야함 
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API
    location /api/ {
        proxy_pass http://apiserver:5000/;
    }

    # AI
    location /ai/ {
        proxy_pass http://aiserver:8000/;
    }
}

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - uiserver
      - apiserver
      - aiserver